pipeline {
    agent any
    parameters {
        
        choice(name: 'CHOICE', choices: ['Decrypt', 'Encrypt'], description: 'Pick Method')
        
        text(name: 'SECRET_TEXT', defaultValue: '', description: 'Enter the secret you want to Decrypt/Encrypt')


    }
    stages {
        stage('Encrypt Secrets') {
		  when {
				expression {
                  params.CHOICE == 'Encrypt' 
				}
		  }       
          steps {
                echo "Choice: Encrypting the text"
                script {
                   def date = new Date()
                   def data = params.SECRET_TEXT
                   writeFile(file: 'input.txt', text: data)
               }
              withCredentials([string(credentialsId: 'encryption_key', variable: 'SECRET')]) { //set SECRET with the credential content
              echo "My secret text is '${SECRET}'"
                sh "openssl enc -in input.txt -out encrypted.dat  -e -base64 -aes-128-ctr -pbkdf2 -salt -k '${SECRET}'"
                sh "cat encrypted.dat"
    }

}
}
 stage('Decrypt Secrets') {
		  when {
				expression {
                  params.CHOICE == 'Decrypt' 
				}
		  }       
          steps {
                echo "Choice: Decrypting the text"
                script {
                   def date = new Date()
                   def data = params.SECRET_TEXT
                   writeFile(file: 'input.txt', text: data)
                   sh "ls -l"
               }


        withCredentials([string(credentialsId: 'encryption_key', variable: 'SECRET')]) { //set SECRET with the credential content
        echo "My secret text is '${SECRET}'"
        sh "openssl enc -in input.txt -out un_encrypted.dat  -d -base64 -aes-128-ctr -pbkdf2 -salt -k '${SECRET}'"
        sh "cat un_encrypted.dat"
    }


              
          }
}
}
}